{"nodes":[{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","hunk":"// depending on the version of the JDK.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","hunk":"SimpleDateBean","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration","hunk":"DateFormattingTests","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration","hunk":"public Date getPatternDateTimeWithFallbackPatternForPreAndPostJdk20() {\n\t\t\treturn this.patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration","hunk":"@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","hunk":"// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment","hunk":"// Primary pattern matches a standard space before AM/PM.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment","hunk":"// Fallback pattern matches a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment","hunk":"// \"SS\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration","hunk":"public Date getStyleDateTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration","hunk":"/**\n\t\t * To avoid the use of Locale-based styles (such as \"MM\") for\n\t\t * {@link SimpleDateBean#patternDateTimeWithFallbackPatternForPreAndPostJdk20}, we have configured a\n\t\t * primary pattern (<code>\"MM/dd/yy h:mm a\"</code>) that matches against a standard space\n\t\t * before the \"PM\" and a fallback pattern (<code>\"MM/dd/yy h:mm&#92;u202Fa\"</code> that matches\n\t\t * against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #styleDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09 3:45 PM\", \"10/31/09 3:45\\u202FPM\"})\n\t\tvoid patternDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"patternDateTimeWithFallbackPatternForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"MM/dd/yy h:mm a\" primary pattern is always used for printing, we\n\t\t\t// can be certain that a normal space is used before the \"PM\".\n\t\t\tassertThat(value).matches(\"10/31/09 3:45 PM\");\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration","hunk":"FallbackPatternTests","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration","hunk":"/**\n\t\t * {@link SimpleDateBean#styleDateTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"SS\" as the date/time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"SS\" style: <code>\"MM/dd/yy h:mm a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"MM/dd/yy h:mm&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #patternDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09, 12:00 PM\", \"10/31/09, 12:00\\u202FPM\"})\n\t\tvoid styleDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleDateTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"SS\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).startsWith(\"10/31/09\").matches(\".+?12:00\\\\p{Zs}PM\");\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration","hunk":"public void setPatternDateTimeWithFallbackPatternForPreAndPostJdk20(Date patternDateTimeWithFallbackPatternForPreAndPostJdk20) {\n\t\t\tthis.patternDateTimeWithFallbackPatternForPreAndPostJdk20 = patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration","hunk":"public void setStyleDateTimeWithFallbackPatternsForPreAndPostJdk20(Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleDateTimeWithFallbackPatternsForPreAndPostJdk20 = styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration","hunk":"@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","hunk":"// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","hunk":"DateTimeBean","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration","hunk":"DateTimeFormattingTests","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","hunk":"// depending on the version of the JDK.","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment","hunk":"// \"-M\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-25224-27091-MethodDeclaration","hunk":"/**\n\t\t * {@link DateTimeBean#styleLocalTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"-M\" as the time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"-M\" style: <code>\"HH:mm:ss a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"HH:mm:ss&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = { \"12:00:00 PM\", \"12:00:00\\u202FPM\" })\n\t\tvoid styleLocalTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleLocalTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"-M\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).matches(\"12:00:00\\\\p{Zs}PM\");\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration","hunk":"FallbackPatternTests","isContext":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration","hunk":"public void setStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20(\n\t\t\t\tLocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20 = styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration","hunk":"public LocalTime getStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration","hunk":"@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false}],"edges":[{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","type":"SIMILARITY","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration","type":"DEF_USE","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","type":"SIMILARITY","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration","type":"DEF_USE","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment","type":"SIMILARITY","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment","type":"SIMILARITY","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-25224-27091-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration","type":"DEF_USE","weight":1.0}]}